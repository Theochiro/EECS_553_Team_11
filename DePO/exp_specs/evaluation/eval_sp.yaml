meta_data:
  script_path: run_scripts/evaluate_state_predictor.py
  exp_name: test_policy_eval
  description: Evaluate a policy
  num_workers: 1
  num_gpu_per_worker: 1
# -----------------------------------------------------------------------------
variables:
  seed: [0]
  method: ['dpo'] # ['bco', 'gailfo', 'gailfo-dp', 'sl-lfo', 'gail-lfo']
  env_specs:
    env_name: [
      # 'invpendulum',
      # 'invdoublependulum',
      'hopper',
      # 'walker',
      # 'halfcheetah',
      # 'ant',
      # 'humanoid'
    ]
# -----------------------------------------------------------------------------
constants:
  # expert_name: 'hopper_sac'
  # expert_name: 'invpendulum_sac'
  expert_idx: 0
  scale_env_with_demo_stats: false
  state_diff: true
  traj_num: 4
   
  # change checkpoint in `evaluate_state_predictor.py`
  # policy_checkpoint: './logs/gail-lfo-walker-union--gp-8.0--spalpha-1.0--idbeta-0.5--rs-2.0/gail_lfo_walker_union--gp-8.0--spalpha-1.0--idbeta-0.5--rs-2.0--2020_12_27_23_19_11--s-0/best.pkl'
  eval_deterministic: true

  policy_net_size: 256
  policy_num_hidden_layers: 2

  num_eval_steps: 2000
  max_path_length: 1000
  no_terminal: false
  render: true
  render_kwargs: {}
  render_mode: rgb_array

  video_path: './videos/'
  img_path: './imgs/'

  save_samples: false # true

  env_specs:
    # env_name: 'walker'
    env_kwargs: {}
    eval_env_seed: 0
